// Mocks generated by Mockito 5.0.15 from annotations
// in countries_gql/test/domain/mocker/mocker.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:countries_gql/domain/models/continent.dart' as _i6;
import 'package:countries_gql/domain/models/country.dart' as _i7;
import 'package:countries_gql/domain/models/failure.dart' as _i5;
import 'package:countries_gql/domain/repos/countries_repo.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [CountriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountriesRepository extends _i1.Mock
    implements _i3.CountriesRepository {
  MockCountriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Continent>>> getContinentList() =>
      (super.noSuchMethod(Invocation.method(#getContinentList, []),
              returnValue:
                  Future<_i2.Either<_i5.Failure, List<_i6.Continent>>>.value(
                      _FakeEither_0<_i5.Failure, List<_i6.Continent>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Continent>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Country>>> getCountryList() =>
      (super.noSuchMethod(Invocation.method(#getCountryList, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i7.Country>>>.value(
              _FakeEither_0<_i5.Failure, List<_i7.Country>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i7.Country>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Country>>>
      getCountriesByContinent(String? continentId) => (super.noSuchMethod(
          Invocation.method(#getCountriesByContinent, [continentId]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i7.Country>>>.value(
              _FakeEither_0<_i5.Failure, List<_i7.Country>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i7.Country>>>);
  @override
  String toString() => super.toString();
}
